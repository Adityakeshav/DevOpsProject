name: DevOps CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devops-flask-app:latest

  validate-terraform:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Validate
        working-directory: ./infrastructure
        run: terraform validate

  destroy-infrastructure:
    runs-on: ubuntu-latest
    needs: validate-terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Destroy
        working-directory: ./infrastructure
        run: terraform destroy -auto-approve
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_docker_image: ${{ secrets.DOCKER_HUB_USERNAME }}/devops-flask-app:latest

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: destroy-infrastructure
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infrastructure
        run: terraform apply -auto-approve
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_docker_image: ${{ secrets.DOCKER_HUB_USERNAME }}/devops-flask-app:latest